{"version":3,"sources":["components/FormPage.js","containers/Form.js"],"names":["InputBox","changeHandler","value","placeholder","name","cl","validator","error","setRef","label","className","ref","type","onFocus","e","target","console","log","onBlur","defaultValue","ThemeSelectMenu","themes","opened","toggle","select","theme","arg1","arg2","options","map","index","ThemeOption","key","dropdown","SelectArea","content","onClick","validatorData","Textarea","rows","FormPage","props","validateField","errors","state","RegExp","test","email","message","setState","submit","preventDefault","submitForm","resetForm","inputName","inputEmail","inputMessage","formIsReady","setInputNameRef","element","setInputEmailRef","setInputMessageRef","this","themesMenuOpened","toggleThemesMenu","selectTheme","inputMail","to","React","Component","Form","connect","form","dispatch"],"mappings":"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","file":"static/js/4.25d0fb29.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport '../form-page.css';\r\n\r\nclass FormPage extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\terrors:{\r\n\t\t\t\tname:'',\r\n\t\t\t\temail:'',\r\n\t\t\t\tmessage:'',\r\n\t\t\t\ttheme:''\r\n\t\t\t},\r\n\t\t\tformIsReady:false\r\n\t\t}\r\n\r\n\t\tthis.setInputNameRef=(element)=>{\r\n\t\t\tthis.inputName=element;\r\n\t\t}\r\n\t\tthis.setInputEmailRef=(element)=>{\r\n\t\t\tthis.inputEmail=element;\r\n\t\t}\r\n\t\tthis.setInputMessageRef=(element)=>{\r\n\t\t\tthis.inputMessage=element;\r\n\t\t}\r\n\t}\r\n\tvalidateField=({name,value})=>{\r\n\t\tvar errors=this.state.errors;\r\n\t\tswitch(name){\r\n\t\t\tcase 'name':\r\n\t\t\t\tif(!value){\r\n\t\t\t\t\terrors.name='empty'\r\n\t\t\t\t}else{\r\n\t\t\t\t\terrors.name='';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'email':\r\n\t\t\t\tconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n\t\t\t\tif(!validEmailRegex.test(value)){\r\n\t\t\t\t\terrors.email='invalid';\r\n\t\t\t\t}else{\r\n\t\t\t\t\terrors.email='';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'theme':\r\n\t\t\t\terrors.theme=value?'':'empty';\r\n\t\t\tcase 'message':\r\n\t\t\t\terrors.message=value?'':'empty';\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\terrors\r\n\t\t});\r\n\t}\r\n\tsubmit=(e)=>{\r\n\t\tconst {name,email,theme,message}=this.props;\r\n\t\tlet {errors}=this.state;\r\n\t\tif(!name){\r\n\t\t\terrors.name='empty';\r\n\t\t}\r\n\t\tif(!email){\r\n\t\t\terrors.email='empty';\r\n\t\t}\r\n\t\tif(!theme){\r\n\t\t\terrors.theme='empty';\r\n\t\t}\r\n\t\tif(!message){\r\n\t\t\terrors.message='empty';\r\n\t\t}\r\n\t\tif(errors.name || errors.email || errors.theme || errors.message){\r\n\t\t\te.preventDefault();\r\n\t\t}else{\r\n\t\t\tthis.props.submitForm();\r\n\t\t}\r\n\r\n\t\tthis.setState({errors})\r\n\t}\r\n\tresetForm=()=>{\r\n\t\tthis.props.resetForm();\r\n\t\tconsole.log('resetting');\r\n\t\tthis.inputName.value='';\r\n\t\tthis.inputEmail.value='';\r\n\t\tthis.inputMessage.value='';\r\n\t}\r\n\trender(){\r\n\t\tconst {themes,themesMenuOpened,theme,name,email,message,toggleThemesMenu,selectTheme,inputName,inputMail,inputMessage}=this.props\r\n\t\tconst {errors}=this.state;\r\n\t\tconsole.log('form page props',this.props);\r\n\t\tconsole.log('form page state',this.state);\r\n\t\treturn(\r\n\t\t\t<div className='form-page'>\r\n\t\t\t\t<div className='form-card'>\r\n\t\t\t\t\t<div className='form-card-body'>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<h2 className='form-title'>Форма для тебя</h2>\r\n\t\t\t\t\t\t\t<InputBox changeHandler={inputName} value={name} placeholder='Представьтесь пожалуйста' name='name' validator={this.validateField} error={errors.name} setRef={this.setInputNameRef}/>\r\n\t\t\t\t\t\t\t<InputBox changeHandler={inputMail} value={email} placeholder='Введите ваш e-mail' name='email' cl='mt-2' validator={this.validateField} error={errors.email} setRef={this.setInputEmailRef} />\r\n\t\t\t\t\t\t\t<ThemeSelectMenu themes={themes} opened={themesMenuOpened} toggle={toggleThemesMenu} select={selectTheme} theme={theme} error={errors.theme} validator={this.validateField} />\r\n\t\t\t\t\t\t\t<Textarea changeHandler={inputMessage} value={message} validator={this.validateField} error={errors.message} setRef={this.setInputMessageRef}/>\r\n\t\t\t\t\t\t\t<div className='form-footer mt-2'>\r\n\t\t\t\t\t\t\t\t<div className='button reset-button' onClick={this.resetForm}>Сбросить</div>\r\n\t\t\t\t\t\t\t\t<Link onClick={this.submit} to={'/'} className='button ml-auto'>Отправить</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction InputBox({changeHandler,value,placeholder,name,cl,validator,error,setRef}){\r\n\tconst blurHandler=(e)=>{\r\n\t\te.target.placeholder=placeholder;\r\n\t\tchangeHandler(e.target.value);\r\n\t\tvalidator(e.target);\r\n\t}\r\n\r\n\tif(value){\r\n\t\tvar label=(\r\n\t\t\t<span className='placeholder'>{placeholder}</span>\r\n\t\t)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className={cl+' input-box '+(value?'filled ':'')+(error?'with-error ':'')}>\r\n\t\t\t{label}\t\t\t\r\n\t\t\t<input ref={setRef} name={name} type=\"text\" placeholder={placeholder} onFocus={(e)=>{e.target.placeholder=''; console.log(e.target)}} onBlur={blurHandler} defaultValue={value}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ThemeSelectMenu({themes,opened,toggle,select,theme,validator,error}){\r\n\tconst changeHandler=(arg1,arg2)=>{\r\n\t\tselect(arg1);\r\n\t\tvalidator(arg2);\r\n\t}\r\n\tif(opened){\r\n\t\tconst options=themes.map((theme,index)=>{\r\n\t\t\treturn <ThemeOption key={index} theme={theme} select={changeHandler}/>\r\n\t\t});\r\n\r\n\t\tvar dropdown=(\r\n\t\t\t<div className='custom-select-dropdown'>\r\n\t\t\t\t{options}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}else{\r\n\t\tdropdown='';\r\n\t}\r\n\t\r\n\treturn(\r\n\t\t<div className='select-box mt-2'>\r\n\t\t\t<div className={'input-box '+(error?'with-error ':'')+(theme?'filled ':'')}>\r\n\t\t\t\t<SelectArea opened={opened} toggle={toggle} theme={theme}/>\r\n\t\t\t\t{dropdown}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction SelectArea({opened,toggle,theme}){\r\n\tif(theme && theme.value){\r\n\t\tvar content=(\r\n\t\t\t<div className='selected-item'>\r\n\t\t\t\t<span className='placeholder'>Тема сообщения</span>\r\n\t\t\t\t{theme.name}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}else{\r\n\t\tcontent='Тема сообщения';\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className={'custom-select-area ' + (opened?'open':'') } onClick={toggle}>\r\n\t\t\t{content}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction ThemeOption({theme,select}){\r\n\tconst validatorData={\r\n\t\tname:'theme',\r\n\t\tvalue:theme.value\r\n\t}\r\n\treturn(\r\n\t\t<div className='custom-select-option' value={theme.value} onClick={(e)=>select(theme.value,validatorData)}>{theme.name}</div>\r\n\t);\r\n}\r\n\r\nfunction Textarea({changeHandler,value,validator,error,setRef}){\r\n\tconst blurHandler=(e)=>{\r\n\t\te.target.placeholder='Введите сообщение';\r\n\t\tchangeHandler(e.target.value);\r\n\t\tvalidator(e.target);\r\n\t}\r\n\treturn(\r\n\t\t<div className={'input-box mt-2 '+(error?'with-error ':'')+(value?'filled ':'')}>\r\n\t\t\t<textarea ref={setRef} placeholder='Введите сообщение' rows='4' onFocus={(e)=>{e.target.placeholder=''}} onBlur={blurHandler} name='message' defaultValue={value}></textarea>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FormPage;","import {connect} from 'react-redux';\r\n\r\nimport FormPage from '../components/FormPage';\r\n\r\nconst mapStateToProps=state=>{\r\n\treturn state.form;\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n\treturn {\r\n\t\ttoggleThemesMenu:()=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'TOGGLE_THEMES_MENU'\r\n\t\t\t});\r\n\t\t},\r\n\t\tselectTheme:(index)=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'SELECT_THEME',\r\n\t\t\t\tvalue:index\r\n\t\t\t});\r\n\t\t},\r\n\t\tinputName:(name)=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'INPUT_NAME',\r\n\t\t\t\tname\r\n\t\t\t});\r\n\t\t},\r\n\t\tinputMail:(email)=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'INPUT_EMAIL',\r\n\t\t\t\temail\r\n\t\t\t});\r\n\t\t},\r\n\t\tinputMessage:(message)=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'INPUT_MESSAGE',\r\n\t\t\t\tmessage\r\n\t\t\t});\r\n\t\t},\r\n\t\tresetForm:()=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'RESET_FORM'\r\n\t\t\t});\r\n\t\t},\r\n\t\tsubmitForm:()=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'SUBMIT_FORM'\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst Form=connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(FormPage);\r\n\r\nexport default Form;"],"sourceRoot":""}