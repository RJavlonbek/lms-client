{"version":3,"sources":["modules/Admin/components/ToolbarSearch.js","modules/Admin/components/TableList.js"],"names":["useStyles","makeStyles","theme","root","borderRadius","alignItems","padding","spacing","display","flexBasis","icon","marginRight","color","palette","text","secondary","input","flexGrow","fontSize","lineHeight","letterSpacing","SearchInput","props","className","onChange","style","rest","classes","Paper","clsx","Input","disableUnderline","seeMore","marginTop","container","paddingTop","paddingBottom","paper","overflow","flexDirection","cardContent","textAlign","loader","margin","addButton","height","float","DeleteConfirmationDialog","onClose","open","other","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","aria-labelledby","DialogContent","dividers","DialogActions","Button","autoFocus","onClick","e","TableCard","columnNames","rows","loading","handleDelete","path","addItemText","searchBoxPlaceholder","useState","rowsPerPage","setRowsPerPage","page","setPage","header","CardHeader","title","Container","Grid","item","xs","placeholder","link","Card","CardContent","CardActions","actions","TablePagination","component","count","requests","length","onChangePage","event","onChangeRowsPerPage","target","value","rowsPerPageOptions","AddItemButton","to","variant","MyTable","selectedItems","setSelectedItems","tableRows","tableCols","TableRow","TableCell","colSpan","CircularProgress","map","row","i","columns","r","ind","key","Checkbox","checked","indexOf","_id","id","selectedIndex","newSelectedItems","concat","slice","handleSelectOne","align","Fab","size","aria-label","push","indeterminate","items","col","Table","TableHead","TableBody","TableList","deleteDialogOpen","setDeleteDialogOpen","deleteId","setDeleteId","action","onDelete"],"mappings":"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","file":"static/js/1.d5332baf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: '4px',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    display: 'flex',\n    flexBasis: 420\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary\n  },\n  input: {\n    flexGrow: 1,\n    fontSize: '14px',\n    lineHeight: '16px',\n    letterSpacing: '-0.05px'\n  }\n}));\n\nconst SearchInput = props => {\n  const { className, onChange, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, className)}\n      style={style}\n    >\n      <SearchIcon className={classes.icon} />\n      <Input\n        {...rest}\n        className={classes.input}\n        disableUnderline\n        onChange={onChange}\n      />\n    </Paper>\n  );\n};\n\nSearchInput.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  style: PropTypes.object\n};\n\nexport default SearchInput;\n","import React, {useState, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n\tDeleteOutlined as DeleteIcon,\r\n\tEditOutlined as EditIcon\r\n}  from '@material-ui/icons';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n\tCard,\r\n\tCardActions,\r\n\tCardContent,\r\n\tCardHeader,\r\n\tTablePagination,\r\n\tCheckbox\r\n} from '@material-ui/core';\r\n\r\nimport Title from '../components/Title';\r\nimport SearchBar from './ToolbarSearch';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column'\r\n  },\r\n  cardContent:{\r\n  \tpadding:0,\r\n  \ttextAlign: 'center'\r\n  },\r\n  loader:{\r\n  \tmargin:'auto'\r\n  },\r\n  addButton:{\r\n  \theight:'100%',\r\n  \tfloat:'right'\r\n  }\r\n}));\r\n\r\nfunction DeleteConfirmationDialog(props) {\r\n  const { onClose,  open, ...other} = props;\r\n\r\n  \treturn (\r\n\t    <Dialog\r\n\t      \tdisableBackdropClick\r\n\t      \tdisableEscapeKeyDown\r\n\t      \tmaxWidth=\"xs\"\r\n\t     \taria-labelledby=\"confirmation-dialog-title\"\r\n\t      \topen={open}\r\n\t      \t{...other}\r\n\t    >\r\n\t      \t<DialogContent dividers>\r\n\t      \t\tAre you sure to delete this item? You will not be able to recover this\r\n\t      \t</DialogContent>\r\n\t      \t<DialogActions>\r\n\t        \t<Button autoFocus onClick={(e)=>onClose('cancel')} color=\"primary\">\r\n\t          \t\tCancel\r\n\t        \t</Button>\r\n\t        \t<Button onClick={(e)=>onClose('ok')} color=\"primary\">\r\n\t          \t\tOk\r\n\t        \t</Button>\r\n\t      \t</DialogActions>\r\n\t    </Dialog>\r\n  \t);\r\n}\r\n\r\nconst TableCard=(props)=>{\r\n\tconst {columnNames, rows, loading, handleDelete, path, addItemText, searchBoxPlaceholder} = props;\r\n  \tconst classes = useStyles();\r\n  \tconst [rowsPerPage, setRowsPerPage] = useState(10);\r\n  \tconst [page, setPage] = useState(0);\r\n\r\n  \tvar header=props.header?(\r\n  \t\t<CardHeader title={props.header} >\r\n  \t\t</CardHeader>\r\n  \t) : '';\r\n\r\n  \tconst handlePageChange = (event, page) => {\r\n  \t  setPage(page);\r\n  \t};\r\n\r\n  \tconst handleRowsPerPageChange = event => {\r\n  \t  setRowsPerPage(event.target.value);\r\n  \t};\r\n\r\n  \treturn(\r\n\t    <Container maxWidth=\"lg\" className={classes.container}>\r\n\t      \t<Grid container spacing={3}>\r\n\t      \t\t<Grid item xs={6}>\r\n\t      \t\t\t<SearchBar placeholder={searchBoxPlaceholder || 'search'}/>\r\n\t      \t\t</Grid>\r\n\t      \t\t<Grid item xs={6}>\r\n\t      \t\t\t<AddItemButton text={addItemText} link={props.path+'/add'} className={classes.addButton} />\r\n\t      \t\t</Grid>\r\n\t        \t<Grid item xs={12}>\r\n\t          \t\t<Card className={classes.paper}>\r\n\t          \t\t\t{header}\r\n\t          \t\t\t<CardContent className={classes.cardContent} >\r\n\t\t\t\t\t    \t<MyTable columnNames={columnNames} rows={rows} loading={loading} handleDelete={handleDelete} path={path} />\r\n\t\t\t\t\t    </CardContent>\r\n\t\t\t\t\t    <CardActions className={classes.actions}>\r\n\t\t\t\t\t      \t<TablePagination\r\n\t\t\t\t\t\t        component=\"div\"\r\n\t\t\t\t\t\t        count={props.requests ? props.requests.length : 0}\r\n\t\t\t\t\t\t        onChangePage={handlePageChange}\r\n\t\t\t\t\t\t        onChangeRowsPerPage={handleRowsPerPageChange}\r\n\t\t\t\t\t\t        page={page}\r\n\t\t\t\t\t\t        rowsPerPage={rowsPerPage}\r\n\t\t\t\t\t\t        rowsPerPageOptions={[5, 10, 25]}\r\n\t\t\t\t\t      \t/>\r\n\t\t\t\t\t    </CardActions>\r\n\t           \t\t</Card>\r\n\t         \t</Grid>\r\n\t       \t</Grid>\r\n\t    </Container>\r\n  \t);\r\n}\r\nTableCard.propTypes={\r\n\trequests:PropTypes.array,\r\n\tloading:PropTypes.bool,\r\n\tshowDeleteDialog:PropTypes.func,\r\n\theader:PropTypes.string\r\n}\r\n\r\nconst AddItemButton = ({text, link, className})=>{\r\n\tif(!text) return '';\r\n\treturn(\r\n\t\t<Link to={link}>\r\n\t\t\t<Button\r\n\t\t\t\tclassName={className}\r\n\t\t\t  \tcolor={\"primary\"}\r\n\t\t\t  \tvariant=\"contained\"\r\n\t\t\t>\r\n\t\t\t\t<AddIcon />\r\n\t\t\t  \t{text}\r\n\t\t\t</Button>\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nconst MyTable=({columnNames, rows, handleDelete, path, loading})=>{\r\n\tconst classes = useStyles();\r\n\tconst [selectedItems, setSelectedItems] = useState([]);\r\n\tlet tableRows=[];\r\n\tlet tableCols=[];\r\n\r\n\tconst handleSelectOne = (event, id) => {\r\n  \t  \tconst selectedIndex = selectedItems.indexOf(id);\r\n  \t  \tlet newSelectedItems = [];\r\n\r\n  \t  \tif (selectedIndex === -1) {\r\n  \t    \tnewSelectedItems = newSelectedItems.concat(selectedItems, id);\r\n  \t  \t} else if (selectedIndex === 0) {\r\n  \t    \tnewSelectedItems = newSelectedItems.concat(selectedItems.slice(1));\r\n  \t  \t} else if (selectedIndex === selectedItems.length - 1) {\r\n  \t    \tnewSelectedItems = newSelectedItems.concat(selectedItems.slice(0, -1));\r\n  \t  \t} else if (selectedIndex > 0) {\r\n  \t    \tnewSelectedItems = newSelectedItems.concat(\r\n\t  \t      \tselectedItems.slice(0, selectedIndex),\r\n\t  \t      \tselectedItems.slice(selectedIndex + 1)\r\n  \t    \t);\r\n  \t\t}\r\n\r\n  \t  \tsetSelectedItems(newSelectedItems);\r\n  \t};\r\n\r\n  \tconst handleSelectAll = event => {\r\n  \t\tvar items=rows;\r\n  \t  \tlet selectedItems;\r\n  \t  \tif (event.target.checked) {\r\n  \t    \tselectedItems = items.map(i => i._id);\r\n  \t  \t} else {\r\n  \t    \tselectedItems = [];\r\n  \t  \t}\r\n  \t  \tsetSelectedItems(selectedItems);\r\n  \t};\r\n\r\n\tif(!rows || loading){\r\n\t\ttableRows = (\r\n\t\t\t<TableRow>\r\n\t\t\t\t<TableCell colSpan={columnNames.length + 2} className={'text-center py-4'} >\r\n\t\t\t\t\t<CircularProgress className={classes.loader} />\r\n\t\t\t\t</TableCell>\r\n\t\t\t</TableRow>\r\n\t\t);\r\n\t}else{\r\n\t\ttableRows=rows.map((row,i)=>{\r\n\t\t\tlet columns = row.columns.map((r, ind)=>{\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<TableCell key={ind} >{r.text}</TableCell>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\treturn(\r\n\t\t\t\t<TableRow key={i}>\r\n\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t  checked={selectedItems.indexOf(row._id) !== -1}\r\n\t\t\t\t\t\t  color={\"primary\"}\r\n\t\t\t\t\t\t  onChange={event => handleSelectOne(event, row._id)}\r\n\t\t\t\t\t\t  value={\"true\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t{columns}\r\n\t\t\t\t  \t<TableCell align=\"right\">\r\n\t\t\t\t  \t\t<Link to={path+'/edit/'+row._id}>\r\n\t\t\t\t  \t\t\t<Fab color='secondary' size='small' aria-label='Edit'>\r\n\t\t\t\t  \t\t\t\t<EditIcon />\r\n\t\t\t\t  \t\t\t</Fab>\r\n\t\t\t\t  \t\t</Link>\r\n\t\t\t\t  \t\t<Fab size='small' aria-label='Delete' className='ml-2' onClick={(e)=>handleDelete(e, row._id)}>\r\n\t\t\t\t  \t\t\t<DeleteIcon />\r\n\t\t\t\t  \t\t</Fab>\r\n\t\t\t\t  \t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t// prepare columns\r\n\ttableCols.push(\r\n      \t<TableCell key={-1}>\r\n      \t  \t<Checkbox\r\n\t      \t    checked={selectedItems.length === rows.length}\r\n\t      \t    color={\"primary\"}\r\n\t      \t    indeterminate={\r\n\t      \t      selectedItems.length > 0 &&\r\n\t      \t      selectedItems.length < rows.length\r\n\t      \t    }\r\n\t      \t    onChange={handleSelectAll}\r\n      \t  \t/>\r\n      \t</TableCell>\r\n\t);\r\n\tcolumnNames.map((col, i)=>{\r\n\t\ttableCols.push(\r\n\t\t\t<TableCell key={i} >{col}</TableCell>\r\n\t\t);\r\n\t});\r\n\r\n\treturn(\r\n\t\t<Table size=\"small\">\r\n\t\t    <TableHead>\r\n\t\t      <TableRow>\r\n\t\t      \t{tableCols}\r\n\t\t        <TableCell align=\"right\">Action</TableCell>\r\n\t\t      </TableRow>\r\n\t\t    </TableHead>\r\n\t\t    <TableBody>\r\n\t\t      {tableRows}\r\n\t\t    </TableBody>\r\n\t\t</Table>\r\n\t);\r\n}\r\n\r\nconst TableList = (props)=>{\r\n\tconst [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n\tconst [deleteId, setDeleteId] = useState(null);\r\n\r\n\t// handler when delete button is clicked\r\n\tconst handleDelete = (event, deleteId)=>{\r\n\t\tsetDeleteDialogOpen(true);\r\n\t\tsetDeleteId(deleteId);\r\n\t}\r\n\r\n\t//handler when deletion is confirmed on dialog\r\n\tconst onClose = (action)=>{\r\n\t\tsetDeleteDialogOpen(false);\r\n\t\tif(action==='ok' && props.onDelete){\r\n\t\t\tprops.onDelete(deleteId);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<TableCard {...props} handleDelete={handleDelete} />\r\n\t\t\t<DeleteConfirmationDialog  open={deleteDialogOpen} onClose={onClose}/>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default TableList;"],"sourceRoot":""}