{"version":3,"sources":["components/Button.js","components/MainPage.js","containers/Home.js","components/FormPage.js","containers/Form.js","App.js","serviceWorker.js","redux/reducers.js","redux/index.js","index.js"],"names":["styled","button","FormData","name","email","theme","message","className","MainPage","props","console","log","this","submitted","link","to","formData","class","React","Component","Home","connect","state","form","InputBox","changeHandler","value","placeholder","cl","validator","error","setRef","label","ref","type","onFocus","e","target","onBlur","defaultValue","ThemeSelectMenu","themes","opened","toggle","select","arg1","arg2","options","map","index","ThemeOption","key","dropdown","SelectArea","content","onClick","validatorData","Textarea","rows","FormPage","validateField","errors","RegExp","test","setState","submit","preventDefault","submitForm","resetForm","inputName","inputEmail","inputMessage","formIsReady","setInputNameRef","element","setInputEmailRef","setInputMessageRef","themesMenuOpened","toggleThemesMenu","selectTheme","inputMail","Form","dispatch","MyRoute","exact","path","component","App","Boolean","window","location","hostname","match","defaultForm","mainReducer","combineReducers","action","selectedTheme","i","Object","assign","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01073ace.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button=styled.button`\r\n\tcursor: pointer;\r\n\tbackground-color: #13c98a;\r\n\tline-height:1;\r\n\tfont-size: 16px;\r\n\tborder:0;\r\n\tborder-radius: 3rem;\r\n\tcolor: #fff;\r\n\tpadding: 1em 3rem;\r\n\t&:hover {\r\n\t  \tbackground-color: #2e09b6;\r\n\t}\r\n`;\r\n\r\nexport default Button;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Button from './Button';\r\n\r\nclass MainPage extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t}\r\n\trender(){\r\n\t\tconsole.log('main page props',this.props);\r\n\t\tconst {submitted,name,theme,email,message}=this.props;\r\n\r\n\t\tif(submitted){\r\n\t\t\tvar link=<Link to={'/form/edit'} className={'button'}>Изменить форму</Link>\r\n\t\t\tvar formData=<FormData name={name} email={email} theme={theme} message={message} />\r\n\t\t}else{\r\n\t\t\tlink=<Link to={'/form'} className={'button'}>Заполнить форму</Link>\r\n\t\t\tformData=<p>Форма пока не заполнена.</p>\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div class='main-page'>\r\n\t\t\t\t<p>Form data:</p>\r\n\t\t\t\t{formData}\r\n\t\t\t\t{link}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction FormData({name,email,theme,message}){\r\n\treturn(\r\n\t\t<div className='form-data'>\r\n\t\t\t<p>Имя: <span className='form-value'>{name}</span></p>\r\n\t\t\t<p>e-mail: <span className='form-value'>{email}</span></p>\r\n\t\t\t<p>Тема сообщения: <span className='form-value'>{theme.name}</span></p>\r\n\t\t\t<p>Сообщения: <span className='form-value'>{message}</span></p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MainPage;","import {connect} from 'react-redux';\r\n\r\nimport MainPage from '../components/MainPage';\r\n\r\nconst mapStateToProps=(state)=>{\r\n\treturn {\r\n\t\tsubmitted:state.form.submitted,\r\n\t\tname:state.form.name,\r\n\t\temail:state.form.email,\r\n\t\ttheme:state.form.theme,\r\n\t\tmessage:state.form.message\r\n\t}\r\n}\r\n\r\nconst Home = connect(mapStateToProps)(MainPage);\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport '../form-page.css';\r\n\r\nclass FormPage extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\terrors:{\r\n\t\t\t\tname:'',\r\n\t\t\t\temail:'',\r\n\t\t\t\tmessage:'',\r\n\t\t\t\ttheme:''\r\n\t\t\t},\r\n\t\t\tformIsReady:false\r\n\t\t}\r\n\r\n\t\tthis.setInputNameRef=(element)=>{\r\n\t\t\tthis.inputName=element;\r\n\t\t}\r\n\t\tthis.setInputEmailRef=(element)=>{\r\n\t\t\tthis.inputEmail=element;\r\n\t\t}\r\n\t\tthis.setInputMessageRef=(element)=>{\r\n\t\t\tthis.inputMessage=element;\r\n\t\t}\r\n\t}\r\n\tvalidateField=({name,value})=>{\r\n\t\tvar errors=this.state.errors;\r\n\t\tswitch(name){\r\n\t\t\tcase 'name':\r\n\t\t\t\tif(!value){\r\n\t\t\t\t\terrors.name='empty'\r\n\t\t\t\t}else{\r\n\t\t\t\t\terrors.name='';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'email':\r\n\t\t\t\tconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n\t\t\t\tif(!validEmailRegex.test(value)){\r\n\t\t\t\t\terrors.email='invalid';\r\n\t\t\t\t}else{\r\n\t\t\t\t\terrors.email='';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'theme':\r\n\t\t\t\terrors.theme=value?'':'empty';\r\n\t\t\tcase 'message':\r\n\t\t\t\terrors.message=value?'':'empty';\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\terrors\r\n\t\t});\r\n\t}\r\n\tsubmit=(e)=>{\r\n\t\tconst {name,email,theme,message}=this.props;\r\n\t\tlet {errors}=this.state;\r\n\t\tif(!name){\r\n\t\t\terrors.name='empty';\r\n\t\t}\r\n\t\tif(!email){\r\n\t\t\terrors.email='empty';\r\n\t\t}\r\n\t\tif(!theme){\r\n\t\t\terrors.theme='empty';\r\n\t\t}\r\n\t\tif(!message){\r\n\t\t\terrors.message='empty';\r\n\t\t}\r\n\t\tif(errors.name || errors.email || errors.theme || errors.message){\r\n\t\t\te.preventDefault();\r\n\t\t}else{\r\n\t\t\tthis.props.submitForm();\r\n\t\t}\r\n\r\n\t\tthis.setState({errors})\r\n\t}\r\n\tresetForm=()=>{\r\n\t\tthis.props.resetForm();\r\n\t\tconsole.log('resetting');\r\n\t\tthis.inputName.value='';\r\n\t\tthis.inputEmail.value='';\r\n\t\tthis.inputMessage.value='';\r\n\t}\r\n\trender(){\r\n\t\tconst {themes,themesMenuOpened,theme,name,email,message,toggleThemesMenu,selectTheme,inputName,inputMail,inputMessage}=this.props\r\n\t\tconst {errors}=this.state;\r\n\t\tconsole.log('form page props',this.props);\r\n\t\tconsole.log('form page state',this.state);\r\n\t\treturn(\r\n\t\t\t<div className='form-page'>\r\n\t\t\t\t<div className='form-card'>\r\n\t\t\t\t\t<div className='form-card-body'>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<h2 className='form-title'>Форма для тебя</h2>\r\n\t\t\t\t\t\t\t<InputBox changeHandler={inputName} value={name} placeholder='Представьтесь пожалуйста' name='name' validator={this.validateField} error={errors.name} setRef={this.setInputNameRef}/>\r\n\t\t\t\t\t\t\t<InputBox changeHandler={inputMail} value={email} placeholder='Введите ваш e-mail' name='email' cl='mt-2' validator={this.validateField} error={errors.email} setRef={this.setInputEmailRef} />\r\n\t\t\t\t\t\t\t<ThemeSelectMenu themes={themes} opened={themesMenuOpened} toggle={toggleThemesMenu} select={selectTheme} theme={theme} error={errors.theme} validator={this.validateField} />\r\n\t\t\t\t\t\t\t<Textarea changeHandler={inputMessage} value={message} validator={this.validateField} error={errors.message} setRef={this.setInputMessageRef}/>\r\n\t\t\t\t\t\t\t<div className='form-footer mt-2'>\r\n\t\t\t\t\t\t\t\t<div className='button reset-button' onClick={this.resetForm}>Сбросить</div>\r\n\t\t\t\t\t\t\t\t<Link onClick={this.submit} to={'/'} className='button ml-auto'>Отправить</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction InputBox({changeHandler,value,placeholder,name,cl,validator,error,setRef}){\r\n\tconst blurHandler=(e)=>{\r\n\t\te.target.placeholder=placeholder;\r\n\t\tchangeHandler(e.target.value);\r\n\t\tvalidator(e.target);\r\n\t}\r\n\r\n\tif(value){\r\n\t\tvar label=(\r\n\t\t\t<span className='placeholder'>{placeholder}</span>\r\n\t\t)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className={cl+' input-box '+(value?'filled ':'')+(error?'with-error ':'')}>\r\n\t\t\t{label}\t\t\t\r\n\t\t\t<input ref={setRef} name={name} type=\"text\" placeholder={placeholder} onFocus={(e)=>{e.target.placeholder=''; console.log(e.target)}} onBlur={blurHandler} defaultValue={value}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ThemeSelectMenu({themes,opened,toggle,select,theme,validator,error}){\r\n\tconst changeHandler=(arg1,arg2)=>{\r\n\t\tselect(arg1);\r\n\t\tvalidator(arg2);\r\n\t}\r\n\tif(opened){\r\n\t\tconst options=themes.map((theme,index)=>{\r\n\t\t\treturn <ThemeOption key={index} theme={theme} select={changeHandler}/>\r\n\t\t});\r\n\r\n\t\tvar dropdown=(\r\n\t\t\t<div className='custom-select-dropdown'>\r\n\t\t\t\t{options}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}else{\r\n\t\tdropdown='';\r\n\t}\r\n\t\r\n\treturn(\r\n\t\t<div className='select-box mt-2'>\r\n\t\t\t<div className={'input-box '+(error?'with-error ':'')+(theme?'filled ':'')}>\r\n\t\t\t\t<SelectArea opened={opened} toggle={toggle} theme={theme}/>\r\n\t\t\t\t{dropdown}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction SelectArea({opened,toggle,theme}){\r\n\tif(theme && theme.value){\r\n\t\tvar content=(\r\n\t\t\t<div className='selected-item'>\r\n\t\t\t\t<span className='placeholder'>Тема сообщения</span>\r\n\t\t\t\t{theme.name}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}else{\r\n\t\tcontent='Тема сообщения';\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className={'custom-select-area ' + (opened?'open':'') } onClick={toggle}>\r\n\t\t\t{content}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction ThemeOption({theme,select}){\r\n\tconst validatorData={\r\n\t\tname:'theme',\r\n\t\tvalue:theme.value\r\n\t}\r\n\treturn(\r\n\t\t<div className='custom-select-option' value={theme.value} onClick={(e)=>select(theme.value,validatorData)}>{theme.name}</div>\r\n\t);\r\n}\r\n\r\nfunction Textarea({changeHandler,value,validator,error,setRef}){\r\n\tconst blurHandler=(e)=>{\r\n\t\te.target.placeholder='Введите сообщение';\r\n\t\tchangeHandler(e.target.value);\r\n\t\tvalidator(e.target);\r\n\t}\r\n\treturn(\r\n\t\t<div className={'input-box mt-2 '+(error?'with-error ':'')+(value?'filled ':'')}>\r\n\t\t\t<textarea ref={setRef} placeholder='Введите сообщение' rows='4' onFocus={(e)=>{e.target.placeholder=''}} onBlur={blurHandler} name='message' defaultValue={value}></textarea>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FormPage;","import {connect} from 'react-redux';\r\n\r\nimport FormPage from '../components/FormPage';\r\n\r\nconst mapStateToProps=state=>{\r\n\treturn state.form;\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n\treturn {\r\n\t\ttoggleThemesMenu:()=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'TOGGLE_THEMES_MENU'\r\n\t\t\t});\r\n\t\t},\r\n\t\tselectTheme:(index)=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'SELECT_THEME',\r\n\t\t\t\tvalue:index\r\n\t\t\t});\r\n\t\t},\r\n\t\tinputName:(name)=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'INPUT_NAME',\r\n\t\t\t\tname\r\n\t\t\t});\r\n\t\t},\r\n\t\tinputMail:(email)=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'INPUT_EMAIL',\r\n\t\t\t\temail\r\n\t\t\t});\r\n\t\t},\r\n\t\tinputMessage:(message)=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'INPUT_MESSAGE',\r\n\t\t\t\tmessage\r\n\t\t\t});\r\n\t\t},\r\n\t\tresetForm:()=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'RESET_FORM'\r\n\t\t\t});\r\n\t\t},\r\n\t\tsubmitForm:()=>{\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:'SUBMIT_FORM'\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst Form=connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(FormPage);\r\n\r\nexport default Form;","import React from 'react';\nimport {Switch, BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\n\nimport MainPage from './containers/Home';\nimport FormPage from './containers/Form';\n\nclass App extends React.Component{\n  render(){\n    return (\n      <Router>\n        <MyRoute />\n      </Router>\n    );\n  }\n  \n}\n\nfunction MyRoute(){\n  return(\n    <Switch>\n      <Route exact path={'/'} component={MainPage} />\n      <Route exact path={'/form'} component={FormPage} />\n      <Route exact path={'/form/edit'} component={FormPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\n\r\nconst defaultForm={\r\n\tthemes:[{\r\n\t\tname:'Тема 1',\r\n\t\tvalue:1\r\n\t},{\r\n\t\tname:'Тема 2',\r\n\t\tvalue:2\r\n\t},{\r\n\t\tname:'Тема 3',\r\n\t\tvalue:3\r\n\t},{\r\n\t\tname:'Тема 4',\r\n\t\tvalue:4\r\n\t}],\r\n\ttheme:'',\r\n\tmessage:'',\r\n\tname:'',\r\n\temail:'',\r\n\tthemesMenuOpened:false,\r\n\tsubmitted:false\r\n}\r\n\r\nfunction form(state=defaultForm,action){\r\n\tswitch(action.type){\r\n\t\tcase 'SELECT_THEME':\r\n\t\t\tvar selectedTheme={};\r\n\t\t\tstate.themes.map((theme,i)=>{\r\n\t\t\t\tif(theme.value==action.value){\r\n\t\t\t\t\tselectedTheme=theme;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn Object.assign({},state,{\r\n\t\t\t\ttheme:selectedTheme,\r\n\t\t\t\tthemesMenuOpened:false\r\n\t\t\t});\r\n\t\tcase 'TOGGLE_THEMES_MENU':\r\n\t\t\treturn Object.assign({},state,{\r\n\t\t\t\tthemesMenuOpened:!state.themesMenuOpened\r\n\t\t\t});\r\n\t\tcase 'INPUT_NAME':\r\n\t\t\treturn Object.assign({},state,{\r\n\t\t\t\tname:action.name\r\n\t\t\t});\r\n\t\tcase 'INPUT_EMAIL':\r\n\t\t\treturn Object.assign({},state,{\r\n\t\t\t\temail:action.email\r\n\t\t\t});\r\n\t\tcase 'INPUT_MESSAGE':\r\n\t\t\treturn Object.assign({},state,{\r\n\t\t\t\tmessage:action.message\r\n\t\t\t});\r\n\t\tcase 'RESET_FORM':\r\n\t\t\treturn Object.assign({},state,{\r\n\t\t\t\tname:'',\r\n\t\t\t\temail:'',\r\n\t\t\t\ttheme:'',\r\n\t\t\t\tmessage:''\r\n\t\t\t});\r\n\t\tcase 'SUBMIT_FORM':\r\n\t\t\treturn Object.assign({},state,{\r\n\t\t\t\tsubmitted:true\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst mainReducer=combineReducers({\r\n\tform\r\n});\r\n\r\nexport default mainReducer;","import {createStore} from 'redux';\r\n\r\nimport mainReducer from './reducers';\r\n\r\nconst store=createStore(mainReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/index';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}